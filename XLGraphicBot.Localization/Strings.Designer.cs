//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XLGraphicBot.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("XLGraphicBot.Localization.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - `!deck` - Takes the most recent image not posted by XLGraphicBot and places it on a deck template..
        /// </summary>
        public static string Deck_Description {
            get {
                return ResourceManager.GetString("Deck_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     - `includeWear` - Defaults to `false`.  Overlays a board wear pattern on the texture.  Example usage: `!deck includeWear: true`.
        /// </summary>
        public static string Deck_IncludeWear {
            get {
                return ResourceManager.GetString("Deck_IncludeWear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   - Has two optional parameters, which can be omitted entirely or used in any combination or order:.
        /// </summary>
        public static string Deck_Parameters {
            get {
                return ResourceManager.GetString("Deck_Parameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     - `stretch` - Defaults to `false`.  By default, maintains original image&apos;s aspect ration when scaling.  Example usage: `!deck stretch: true`.
        /// </summary>
        public static string Deck_Stretch {
            get {
                return ResourceManager.GetString("Deck_Stretch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   - To see a list of all the colors that can be used with these run `!graphicbot help tops colors`..
        /// </summary>
        public static string General_Colors {
            get {
                return ResourceManager.GetString("General_Colors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - `!deck` - Takes the most recent image and places it on a deck template.  For more info, run `!graphicbot help deck`..
        /// </summary>
        public static string General_Deck {
            get {
                return ResourceManager.GetString("General_Deck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XLGraphicBot allows you to take images posted in a channel and turn them into a deck or shirt immediately for SkaterXL..
        /// </summary>
        public static string General_Description {
            get {
                return ResourceManager.GetString("General_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - `!alphamshirt` / `!bwhoodie` / `!esshirt` / `!mhoodie` / `!mshirt` / `!msweater` / `!tashirt` / `!tlsweater` - Takes the most recent image and places it on the appropriate shirt/sweater template.  For more info, run `!graphicbot help tops`.
        /// </summary>
        public static string General_Tops {
            get {
                return ResourceManager.GetString("General_Tops", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **XLGraphicBot Help**.
        /// </summary>
        public static string HelpHeader {
            get {
                return ResourceManager.GetString("HelpHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AliceBlue, AntiqueWhite, Aqua, Aquamarine, Azure, Beige, Bisque, Black, BlanchedAlmond, Blue, BlueViolet, Brown, BurlyWood, CadetBlue, Chartreuse, Chocolate, Coral, CornflowerBlue, Cornsilk, Crimson, Cyan, DarkBlue, DarkCyan, DarkGoldenrod, DarkGray, DarkGreen, DarkKhaki, DarkMagenta, DarkOliveGreen, DarkOrange, DarkOrchid, DarkRed, DarkSalmon, DarkSeaGreen, DarkSlateBlue, DarkSlateGray, DarkTurquoise, DarkViolet, DeepPink, DeepSkyBlue, DimGray, DodgerBlue, Firebrick, FloralWhite, ForestGreen, Fuchsia, Gain [rest of string was truncated]&quot;;.
        /// </summary>
        public static string KnownColors {
            get {
                return ResourceManager.GetString("KnownColors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full list of colors that can be used with any of the tops commands:.
        /// </summary>
        public static string TheFullListOfColors {
            get {
                return ResourceManager.GetString("TheFullListOfColors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to       - `#AARRGGBB` - Example usage: `!esshirt color: #FFFF00FF`.
        /// </summary>
        public static string Tops_AARRGGBB {
            get {
                return ResourceManager.GetString("Tops_AARRGGBB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - `!alphamshirt`/`!alpha` - Alpha MShirt template..
        /// </summary>
        public static string Tops_AlphaMShirt {
            get {
                return ResourceManager.GetString("Tops_AlphaMShirt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - `!bwhoodie`/`!bw` - BWHoodie template..
        /// </summary>
        public static string Tops_BWHoodie {
            get {
                return ResourceManager.GetString("Tops_BWHoodie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     - `color` - Defaults to `null`.  If not passed, the default white of the template will be used.  Can be passed in 3 formats:.
        /// </summary>
        public static string Tops_Color {
            get {
                return ResourceManager.GetString("Tops_Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XLGraphicBot supports multiple top types.  They all take the most recent image that was not posted by XLGraphicBot and place it on the appropriate template.  Most have aliases and shortcuts..
        /// </summary>
        public static string Tops_Description {
            get {
                return ResourceManager.GetString("Tops_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - `!esshirt`/`!es` - ESShirt template..
        /// </summary>
        public static string Tops_ESShirt {
            get {
                return ResourceManager.GetString("Tops_ESShirt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to       - `Known colors` - English monikers for colors.  To see the full list run `!graphicbot help tops colors`..
        /// </summary>
        public static string Tops_KnownColors {
            get {
                return ResourceManager.GetString("Tops_KnownColors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - `!mhoodie`/`!hoodie` - MHoodie template..
        /// </summary>
        public static string Tops_MHoodie {
            get {
                return ResourceManager.GetString("Tops_MHoodie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - `!mshirt`/`!shirt` - MShirt template..
        /// </summary>
        public static string Tops_MShirt {
            get {
                return ResourceManager.GetString("Tops_MShirt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - `!msweater`/`!sweater` - MSweater template..
        /// </summary>
        public static string Tops_MSweater {
            get {
                return ResourceManager.GetString("Tops_MSweater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   - Each of these commands have two optional parameters which can be omitted entirely or used in any combination or order:.
        /// </summary>
        public static string Tops_Parameters {
            get {
                return ResourceManager.GetString("Tops_Parameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to       - `#RRGGBB` - Example usage: `!tlsweater color: #FF00FF`.
        /// </summary>
        public static string Tops_RRGGBB {
            get {
                return ResourceManager.GetString("Tops_RRGGBB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     - `stretch` - Defaults to `false`. By default, maintains original image&apos;s aspect ration when scaling. Example usage: `!mshirt stretch: true`.
        /// </summary>
        public static string Tops_Stretch {
            get {
                return ResourceManager.GetString("Tops_Stretch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - `!tashirt`/`!ta` - TAShirt template..
        /// </summary>
        public static string Tops_TAShirt {
            get {
                return ResourceManager.GetString("Tops_TAShirt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - `!tlsweater`/`!tl` - TLSweater template..
        /// </summary>
        public static string Tops_TLSweater {
            get {
                return ResourceManager.GetString("Tops_TLSweater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, I didn&apos;t find an image I could use in the last 20 posts..
        /// </summary>
        public static string UnableToFindImageMessage {
            get {
                return ResourceManager.GetString("UnableToFindImageMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1.0.0.
        /// </summary>
        public static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
    }
}
